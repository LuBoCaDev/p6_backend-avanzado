openapi: 3.0.0
info:
  title: API de Productos
  description: API REST para la gestión de productos, con funcionalidades de creación, consulta, actualización y eliminación.
  version: 1.0.0
servers:
  - url: http://localhost:3000
    description: Servidor local

paths:
  /api/login:
    post:
      summary: Realizar login y obtener un JWT
      description: Permite hacer login en el API y recibir un token JWT para autenticación.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: Correo electrónico del usuario.
                  example: admin@example.com
                password:
                  type: string
                  description: Contraseña del usuario.
                  example: 1234
      responses:
        '200':
          description: Login exitoso. Devuelve un token JWT.
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: Token JWT para autenticar las siguientes peticiones.
        '400':
          description: Credenciales inválidas.
        '500':
          description: Error interno del servidor.

  /api/products:
    get:
      summary: Obtener lista de productos
      description: Devuelve una lista de productos que pertenecen al usuario autenticado. Soporta filtros, paginación, ordenación y selección de campos.
      parameters:
        - name: name
          in: query
          description: Filtrar productos por nombre.
          required: false
          schema:
            type: string
        - name: price
          in: query
          description: Filtrar productos por precio.
          required: false
          schema:
            type: number
        - name: limit
          in: query
          description: Límite de productos por página.
          required: false
          schema:
            type: integer
        - name: skip
          in: query
          description: Número de productos a omitir.
          required: false
          schema:
            type: integer
        - name: sort
          in: query
          description: Campo para ordenar los productos.
          required: false
          schema:
            type: string
        - name: fields
          in: query
          description: Campos específicos a devolver (separados por espacios).
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Lista de productos obtenida con éxito.
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Product'
                  count:
                    type: integer
        '401':
          description: Usuario no autorizado.
        '500':
          description: Error interno del servidor.

    post:
      summary: Crear un nuevo producto
      description: Crea un nuevo producto para el usuario autenticado.
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Nombre del producto.
                description:
                  type: string
                  description: Descripción del producto.
                price:
                  type: number
                  description: Precio del producto.
                avatar:
                  type: string
                  format: binary
                  description: Imagen del producto.
      responses:
        '201':
          description: Producto creado exitosamente.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: Error en la solicitud.
        '500':
          description: Error interno del servidor.

  /api/products/{productId}:
    get:
      summary: Obtener un producto
      description: Devuelve los detalles de un producto específico.
      parameters:
        - name: productId
          in: path
          required: true
          description: ID del producto.
          schema:
            type: string
      responses:
        '200':
          description: Detalles del producto.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Producto no encontrado.
        '500':
          description: Error interno del servidor.

    put:
      summary: Actualizar un producto
      description: Actualiza los datos de un producto específico.
      parameters:
        - name: productId
          in: path
          required: true
          description: ID del producto.
          schema:
            type: string
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Nombre del producto.
                description:
                  type: string
                  description: Descripción del producto.
                price:
                  type: number
                  description: Precio del producto.
                avatar:
                  type: string
                  format: binary
                  description: Imagen del producto.
      responses:
        '200':
          description: Producto actualizado exitosamente.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '401':
          description: Usuario no autorizado.
        '404':
          description: Producto no encontrado.
        '500':
          description: Error interno del servidor.

    delete:
      summary: Eliminar un producto
      description: Elimina un producto específico si pertenece al usuario autenticado.
      parameters:
        - name: productId
          in: path
          required: true
          description: ID del producto.
          schema:
            type: string
      responses:
        '204':
          description: Producto eliminado con éxito.
        '401':
          description: Usuario no autorizado.
        '404':
          description: Producto no encontrado.
        '500':
          description: Error interno del servidor.

components:
  schemas:
    Product:
      type: object
      properties:
        id:
          type: string
          description: ID único del producto.
        name:
          type: string
          description: Nombre del producto.
        description:
          type: string
          description: Descripción del producto.
        price:
          type: number
          description: Precio del producto.
        avatar:
          type: string
          description: URL de la imagen del producto.
        owner:
          type: string
          description: ID del propietario del producto.
    Login:
      type: object
      properties:
        email:
          type: string
          description: Correo electrónico del usuario.
        password:
          type: string
          description: Contraseña del usuario.
